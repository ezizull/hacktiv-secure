definitions:
  auth.AccessTokenRequest:
    properties:
      refreshToken:
        example: badbunybabybebe
        type: string
    required:
    - refreshToken
    type: object
  auth.DataUserAuthenticated:
    properties:
      email:
        example: some@mail.com
        type: string
      firstName:
        example: John
        type: string
      id:
        example: 123
        type: integer
      lastName:
        example: Doe
        type: string
      role:
        $ref: '#/definitions/secure_challenge-3_domain_role.Role'
      role_id:
        example: admin
        type: string
      userName:
        example: UserName
        type: string
    type: object
  auth.LoginRequest:
    properties:
      email:
        example: mail@mail.com
        type: string
      password:
        example: Password123
        type: string
    required:
    - email
    - password
    type: object
  book.MessageResponse:
    properties:
      message:
        type: string
    type: object
  book.NewBookRequest:
    properties:
      description:
        example: Something
        type: string
      title:
        example: Book
        type: string
    required:
    - description
    - title
    type: object
  book.PaginationResultBook:
    properties:
      current:
        type: integer
      data:
        items:
          $ref: '#/definitions/secure_challenge-3_domain_book.Book'
        type: array
      limit:
        type: integer
      nextCursor:
        type: integer
      numPages:
        type: integer
      prevCursor:
        type: integer
      total:
        type: integer
    type: object
  controllers.MessageResponse:
    properties:
      message:
        type: string
    type: object
  secure_challenge-3_domain_book.Book:
    properties:
      createdAt:
        type: string
      deletedAt:
        type: string
      description:
        example: book description
        type: string
      id:
        type: integer
      title:
        example: book title
        type: string
      updatedAt:
        type: string
      user_id:
        type: integer
    type: object
  secure_challenge-3_domain_role.Role:
    properties:
      createdAt:
        type: string
      id:
        type: integer
      name:
        type: string
      updatedAt:
        type: string
    type: object
  user.MessageResponse:
    properties:
      message:
        type: string
    type: object
  user.NewUserRequest:
    properties:
      email:
        example: mail@mail.com
        type: string
      firstName:
        example: John
        type: string
      lastName:
        example: Doe
        type: string
      password:
        example: Password123
        type: string
      role_id:
        example: admin
        type: string
      username:
        example: someUser
        type: string
    required:
    - email
    - firstName
    - lastName
    - password
    - role_id
    - username
    type: object
  user.ResponseUser:
    properties:
      createdAt:
        example: "2021-02-24 20:19:39"
        type: string
      email:
        example: some@mail.com
        type: string
      firstName:
        example: John
        type: string
      id:
        example: 1099
        type: integer
      lastName:
        example: Doe
        type: string
      updatedAt:
        example: "2021-02-24 20:19:39"
        type: string
      user:
        example: BossonH
        type: string
    type: object
info:
  contact: {}
paths:
  /auth/access-token:
    post:
      description: Auth user by email and password
      parameters:
      - description: body data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/auth.AccessTokenRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.DataUserAuthenticated'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.MessageResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.MessageResponse'
      summary: GetAccessTokenByRefreshToken UserName
      tags:
      - auth
  /auth/login:
    post:
      description: Auth user by email and password
      parameters:
      - description: body data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/auth.LoginRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.DataUserAuthenticated'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.MessageResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.MessageResponse'
      summary: Login UserName
      tags:
      - auth
  /book:
    get:
      description: Get all Books on the system
      parameters:
      - description: limit
        in: query
        name: limit
        required: true
        type: string
      - description: page
        in: query
        name: page
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/book.PaginationResultBook'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/book.MessageResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/book.MessageResponse'
      summary: Get all Books
      tags:
      - book
    post:
      consumes:
      - application/json
      parameters:
      - description: body data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/book.NewBookRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/secure_challenge-3_domain_book.Book'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/book.MessageResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/book.MessageResponse'
      summary: Create New Book
      tags:
      - book
  /book/{book_id}:
    get:
      parameters:
      - description: id of book
        in: path
        name: book_id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/secure_challenge-3_domain_book.Book'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/book.MessageResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/book.MessageResponse'
      summary: Get books by ID
      tags:
      - book
  /user:
    get:
      description: Get all Users on the system
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/user.ResponseUser'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/user.MessageResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/user.MessageResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all Users
      tags:
      - user
    post:
      consumes:
      - application/json
      description: Create new user on the system
      parameters:
      - description: body data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/user.NewUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.ResponseUser'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/user.MessageResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/user.MessageResponse'
      security:
      - ApiKeyAuth: []
      summary: Create New UserName
      tags:
      - user
  /user/{user_id}:
    get:
      description: Get Users by ID on the system
      parameters:
      - description: id of user
        in: path
        name: user_id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.MessageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/user.MessageResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/user.MessageResponse'
      security:
      - ApiKeyAuth: []
      summary: Get users by ID
      tags:
      - user
swagger: "2.0"
